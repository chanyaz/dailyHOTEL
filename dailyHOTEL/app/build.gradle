import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

buildscript {
    repositories {
        google()
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'io.fabric'

repositories {
    google()
    jcenter()

    maven { url 'https://maven.fabric.io/public' }
    maven { url 'http://devrepo.kakao.com:8088/nexus/content/groups/public/' }
    maven { url "http://appboy.github.io/appboy-android-sdk/sdk" }

    flatDir {
        dirs 'libs'
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.2'

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignoreWarnings true
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/LICENSE'
    }

    defaultConfig {
        applicationId "com.twoheart.dailyhotel"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 2010601
        versionName "2.1.6"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        resConfigs "ko"
//        resConfigs "nodpi", "hdpi", "xhdpi", "xxhdpi"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'
        }

        debug {
            debuggable true
            applicationIdSuffix ".debug"
            buildConfigField 'com.twoheart.dailyhotel.Setting.Stores', 'RELEASE_STORE', 'com.twoheart.dailyhotel.Setting.Stores.PLAY_STORE'
        }
    }

    flavorDimensions "STORE", "SERVER"

    productFlavors {
        googlePlayStore {
            dimension "STORE"
        }

        oneStore {
            dimension "STORE"
        }

        dev {
            dimension "SERVER"
        }

        stage {
            dimension "SERVER"
        }

        prod {
            dimension "SERVER"
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries false
    }

    applicationVariants.all { variant ->

        if (variant.buildType.name == "release") {

        } else {
            // ./gradlew assembleDebug -Pqa
            if (project.hasProperty('qa') == false) {
                return
            }
        }

        def simpleDateFormat = new SimpleDateFormat("yyMMdd")
        simpleDateFormat.setTimeZone(TimeZone.getDefault())

        def apkName = "DH"
        apkName += "-" + variant.flavorName

//        if (variant.buildType.name == "release") {
//            apkName += "-Prod";
//        } else {
//            apkName += "-Dev";
//        }
//
//        def currentFlavor = variant.flavorName;
//
//        if (currentFlavor.equalsIgnoreCase("googleplaystore") == true) {
//            apkName += "-Play";
//        } else if (currentFlavor.equalsIgnoreCase("onestore") == true) {
//            apkName += "-Tstore";
//        } else {
//            apkName += "-" + variant.flavorName;
//        }

        if (variant.buildType.name == "release") {

        } else {
            if ("$qa" == null || "$qa".length() == 0) {
                apkName += '-QA-00'
            } else {
                apkName += '-QA-' + "$qa"
            }
        }

        apkName += "-v" + defaultConfig.versionCode

        def getGitName = { ->
            def stdout = new ByteArrayOutputStream()
            exec {
                commandLine 'git', 'config', 'user.name'
                standardOutput = stdout
            }

            return stdout.toString().trim()
        }

        def gitName = getGitName()

        if (gitName == 'sheldon') {
            apkName += "-Sheldon"
        } else if (gitName == 'android_sam') {
            apkName += "-Sam"
        } else {
            apkName += "-" + gitName
        }

        apkName += "-" + simpleDateFormat.format(new Date())

        def getGitHash = { ->
            def stdout = new ByteArrayOutputStream()
            exec {
                commandLine 'git', 'rev-parse', '--short', 'HEAD'
                standardOutput = stdout
            }

            return stdout.toString().trim()
        }

        apkName += "-" + getGitHash()

        apkName += ".apk"

        variant.outputs.all { output ->
            outputFileName = apkName
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:support-v4:27.0.2'
    compile 'com.android.support:cardview-v7:27.0.2'
    compile 'com.android.support:customtabs:27.0.2'
    compile 'com.android.support:animated-vector-drawable:27.0.2'
    compile 'com.android.support:gridlayout-v7:27.0.2'
    compile 'com.android.support:design:27.0.2'
    compile 'com.android.support:multidex:1.0.2'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.9.1'

    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    compile 'com.facebook.fresco:fresco:1.5.0'
    compile 'com.facebook.fresco:drawee:1.5.0'
    compile 'com.facebook.fresco:imagepipeline-okhttp3:1.5.0'

    compile 'com.kakao.sdk:usermgmt:1.6.2'
    compile 'com.kakao.sdk:kakaolink:1.6.2'

    compile 'com.appboy:android-sdk-ui:2.2.+'

    compile 'com.adjust.sdk:adjust-android:4.11.4'

    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }
    compile 'com.facebook.android:facebook-core:4.+'
    compile 'com.facebook.android:facebook-login:4.+'
    compile 'com.facebook.android:facebook-applinks:4.+'

    compile project(':AndroidMapsUtils')
    compile project(':androidnumberpicker')
    compile project(':keyframes')
    compile project(':base')
    // 라이브러리를 빌드하면 항상 release 버전이 되어서..
//    releaseCompile project(path: ':base', configuration: 'release')
//    debugCompile project(path: ':base', configuration: 'debug')

    compile files('libs/com.skt.Tmap_1.0.49.jar')

    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.7'

    compile 'com.google.android.gms:play-services-base:11.8.0'
    compile 'com.google.android.gms:play-services-maps:11.8.0'
    compile 'com.google.android.gms:play-services-location:11.8.0'
    compile 'com.google.android.gms:play-services-gcm:11.8.0'
    compile 'com.google.android.gms:play-services-analytics:11.8.0'
    compile 'com.google.firebase:firebase-core:11.8.0'
    compile 'com.google.firebase:firebase-config:11.8.0'
    compile 'com.google.firebase:firebase-perf:11.8.0'

    compile 'com.bluelinelabs:logansquare:1.3.7'
    annotationProcessor 'com.bluelinelabs:logansquare-compiler:1.3.7'
    compile "com.github.aurae.retrofit2:converter-logansquare:1.4.1"

    // 다른앱 프로세스 보기
    compile 'com.jaredrummler:android-processes:1.0.9'

    //
//    debugCompile 'com.facebook.stetho:stetho:1.4.1'
//    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.4.1'
//    debugCompile 'com.facebook.stetho:stetho-urlconnection:1.4.1'
//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'

    // test dependencies
    androidTestCompile 'com.android.support:support-annotations:27.0.2'

    androidTestCompile 'com.android.support.test:runner:1.0.1'
    // Set this dependency to use JUnit 4 rules
    androidTestCompile 'com.android.support.test:rules:1.0.1'
    // Set this dependency to build and run Espresso tests
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.1'
    // Set this dependency to build and run UI Automator tests
//    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

apply plugin: 'com.google.gms.google-services'
